{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","actions/cartActions.js","components/ProductButtons.js","actions/productActions.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","components/CategoryCard.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","screens/WalletScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_MINUS_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","newItem","existingItem","find","x","newQty","qty","countInStock","map","minusItem","updatedCartItems","item","Number","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","className","Control","name","onChange","target","value","placeholder","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","expand","collapseOnSelect","Container","to","Brand","src","width","height","fluid","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","style","border","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","addToCart","_id","image","price","setItem","stringify","removeFromCart","ProductButtons","itemInCart","inputGroupClass","addToCartClass","plusClass","minusClass","trashIcon","countClass","addToCartHandler","disabled","InputGroup","listProducts","listProductDetails","Product","match","console","log","Card","Img","backgroundColor","transition","Body","Title","as","Text","rating","numReviews","marginBottom","paddingBottom","marginTop","Loader","Spinner","animation","role","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","CategoryCard","iconSrc","alt","tag","ProductCarousel","useEffect","Carousel","pause","Image","Caption","HomeScreen","search","category","xs","sm","md","xl","lg","ProductScreen","setQty","setRating","comment","setComment","params","loadingProductReview","errorProductReview","successProductReview","ListGroup","description","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","CartScreen","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","background","PaymentScreen","itemsPrice","shippingPrice","taxPrice","setPaymentMethod","ToggleButtonGroup","orientation","method","ToggleButton","OverlayTrigger","placement","overlay","pointerEvents","PlaceOrderScreen","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","Check","label","checked","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","WalletScreen","thumbnail","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2e34f1e7.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n\r\n","// export const CART_LIST_REQUEST = 'CART_LIST_REQUEST'\r\n// export const CART_LIST_SUCCESS = 'CART_LIST_SUCCESS'\r\n// export const CART_LIST_FAIL = 'CART_LIST_FAIL'\r\n\r\nexport const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\n\r\nexport const CART_MINUS_ITEM = 'CART_MINUS_ITEM'\r\n\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n\r\n  // CART_LIST_REQUEST,\r\n  //   CART_LIST_SUCCESS,\r\n  //   CART_LIST_FAIL,\r\n\r\n\r\n    CART_ADD_ITEM,\r\n    CART_MINUS_ITEM,\r\n\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n// // reduce cart from db\r\n// export const cartListReducer = (state = { cartItems: [] }, action) => {\r\n//   switch (action.type) {\r\n//       case CART_LIST_REQUEST:\r\n//           return { loading: true, cartItems: [] }\r\n\r\n//       case CART_LIST_SUCCESS:\r\n//         console.log(\"cartItems\",action.payload.cartItems)\r\n\r\n\r\n//           return {\r\n//               loading: false,\r\n//               cartItems: action.payload.cartItems,\r\n             \r\n//           }\r\n\r\n//       case CART_LIST_FAIL:\r\n\r\n//           return { loading: false, error: action.payload }\r\n\r\n//       default:\r\n//           return state\r\n//   }\r\n// }\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const newItem = action.payload;\r\n\r\n            const existingItem = state.cartItems.find(x => x.product === newItem.product);\r\n\r\n\r\n            if (existingItem) {\r\n                const newQty = existingItem.qty + newItem.qty;\r\n\r\n                if (newQty <= existingItem.countInStock) {\r\n                  return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                      x.product === existingItem.product ? { ...x, qty: newQty } : x\r\n                    )\r\n                  };\r\n                } else {\r\n                  return state; // Return current state if the new quantity exceeds countInStock\r\n                }\r\n              }  else {\r\n                return {\r\n                ...state,\r\n                cartItems: [...state.cartItems, newItem]\r\n                };\r\n            }\r\n\r\n            // if (existItem) {\r\n            //     return {\r\n            //       ...state,\r\n            //       cartItems: state.cartItems.map(x =>\r\n            //         x.product === existItem.product\r\n            //           ? { ...x, qty: x.qty +    cartItems.qty } // Increase the quantity\r\n            //           : x\r\n            //       ),\r\n            //     };\r\n            //   }\r\n            //  else {\r\n            //     return {\r\n            //         ...state,\r\n            //         cartItems: [...state.cartItems, item]\r\n            //     }\r\n            // }\r\n            case CART_MINUS_ITEM:\r\n                const minusItem = action.payload;\r\n  \r\n                const updatedCartItems = state.cartItems.map(item =>\r\n                  item.product === Number(minusItem) \r\n                  ? { ...item, qty: item.qty - 1 }\r\n                  : item\r\n                  );\r\n                  \r\n          \r\n                return {\r\n                  ...state,\r\n                  cartItems: updatedCartItems,\r\n                };\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} className=\"d-flex\">\r\n            <Form.Control\r\n                type=\"text\"\r\n                name=\"q\"\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className=\"mr-sm-2 flex-grow-1\"\r\n                placeholder=\"Search Products...\"\r\n            />\r\n            <Button type=\"submit\" variant=\"outline-light\" className=\"p-2\">\r\n                Search\r\n            </Button>\r\n        </Form> \r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown,Image } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar /*bg=\"dark\"*/ className='jungle-color' variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer className='mr-5' to='/'>\r\n                        <Navbar.Brand>\r\n                            <img src='Almasila_Kart_logo.png'   width=\"200px\" height=\"50px\" fluid />\r\n                            </Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link >\r\n                                    <i className=\"fas fa-shopping-cart position-relative\">\r\n                                        \r\n                                {/* <span class=\"position-absolute top-50 start-100 translate-middle text-danger badge badge-sm rounded-pill bg-secondary\">9 </span> */}\r\n                                        </i>Cart\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown  title={userInfo.name} id='username'>\r\n                                    \r\n                                    <LinkContainer style={{border: 'none'}} className='bg-light text-dark' to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer style={{border: 'none'}} className='bg-light text-dark' to='/wallet'>\r\n                                        <NavDropdown.Item >My Wallet</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer onClick={logoutHandler} style={{border: 'none'}} className='bg-light text-dark' to=\"/login\">\r\n                                        <NavDropdown.Item >Logout</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    \r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; Clip Fart</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import axios from 'axios'\r\nimport {\r\n    // CART_LIST_REQUEST,\r\n    // CART_LIST_SUCCESS,\r\n    // CART_LIST_FAIL,\r\n\r\n    CART_ADD_ITEM,\r\n    CART_MINUS_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\n// // fetch cart from db\r\n// export const listCartItems = () => async (dispatch,getState) => {\r\n//     try {\r\n//         dispatch({ type: CART_LIST_REQUEST })\r\n\r\n//         const {\r\n//             userLogin: { userInfo },\r\n//         } = getState()\r\n\r\n//         const config = {\r\n//             headers: {\r\n//               Authorization: `Bearer ${userInfo.token}`,\r\n//             },\r\n//         };\r\n\r\n//         const { data: cartItemsData } = await axios.get(`/api/cart/`, config);\r\n//         console.log(\"data\", cartItemsData)\r\n\r\n//         // Fetch product details for each cart item and merge them\r\n//         const updatedCartItems = await Promise.all(cartItemsData.map(async cartItem => {\r\n//             console.log('cartitem', cartItem)\r\n//             const { data: productData } = await axios.get(`/api/products/4`);\r\n//             console.log(\"product\", productData)\r\n\r\n//             // return {\r\n//             //     ...cartItem,\r\n//             //     product: productData,\r\n//             // };\r\n//         }));\r\n\r\n//         console.log(\"cartItemsData\",updatedCartItems)\r\n\r\n//         dispatch({\r\n//             type: CART_LIST_SUCCESS,\r\n//             payload: updatedCartItems\r\n//         });\r\n\r\n\r\n//     } catch (error) {\r\n//         console.error('Error fetching cart items:', error);\r\n//         dispatch({\r\n//             type: CART_LIST_FAIL,\r\n//             payload: error.response && error.response.data.detail\r\n//                 ? error.response.data.detail\r\n//                 : error.message,\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n// export const minusCart = (productId) => {\r\n//     return {\r\n//       type: CART_MINUS_ITEM,\r\n//       payload: productId,\r\n//     };\r\n//   };\r\n\r\nexport const minusCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_MINUS_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useState } from 'react';\r\nimport { Button, ButtonGroup, InputGroup } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addToCart, minusCart, removeFromCart } from '../actions/cartActions';\r\n\r\n\r\n\r\n\r\nconst ProductButtons = ({ itemInCart, product, inputGroupClass, addToCartClass, plusClass, minusClass, countClass, trashIcon }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [qty, setQty] = useState(1);\r\n\r\n    const addToCartHandler = () => {\r\n        dispatch(addToCart(product._id, Number(qty)));\r\n    };\r\n\r\n    const minusCartHandler = () => {\r\n        dispatch(minusCart(product._id));\r\n    };\r\n\r\n    const removeItemHandler = () => {\r\n        dispatch(removeFromCart(product._id));\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            {!itemInCart || itemInCart.qty <= 0 ? (\r\n                <Button\r\n                    onClick={addToCartHandler}\r\n                    className={addToCartClass? addToCartClass : 'btn-block'}\r\n                    disabled={product.countInStock === 0}\r\n                    type='button'\r\n                >\r\n                    Add to Cart\r\n                </Button>\r\n            ) : (\r\n                <InputGroup className={\r\n                    inputGroupClass ? inputGroupClass : \r\n                    'd-flex flex-nowrap align-items-center justify-content-between text-center'}>\r\n                    <Button\r\n                        onClick={itemInCart.qty > 1 ? minusCartHandler : removeItemHandler}\r\n                        className={minusClass? minusClass : \"btn\"}\r\n                        disabled={product.countInStock === 0}\r\n                        type='button'\r\n                    >\r\n                        <i className={`fas fa-${itemInCart.qty > 1 ? 'minus' : trashIcon? trashIcon: 'trash'}`}></i>\r\n                    </Button>\r\n                    <span className='bg-transparent w-auto '>{itemInCart.qty}</span>\r\n                    <Button\r\n                        onClick={addToCartHandler}\r\n                        className={plusClass? plusClass : \"btn\"}\r\n                        disabled={product.countInStock <= itemInCart.qty}\r\n                        type='button'\r\n                    >\r\n                        <i className='fas fa-plus'></i>\r\n                    </Button>\r\n                </InputGroup>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductButtons;\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React ,{useEffect} from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport ProductButtons from './ProductButtons'\r\nimport { listProductDetails } from '../actions/productActions'\r\n\r\nfunction Product({ match,product }) {\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n  \r\n    const itemInCart = cartItems.find(item => item.product === Number(product._id));\r\n    const dispatch = useDispatch()\r\n\r\n    console.log(\"product\",product._id)\r\n    console.log(\"itemInCart \",itemInCart?.product ?? \"empty\")\r\n\r\n\r\n\r\n    return (\r\n        <Card className=\"text-dark my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n                <div className='wishlist-heart '\r\n                 \r\n                style={{backgroundColor:'rgba(240, 241, 242, 0.5)',transition: 'transform 0.2s, opacity 0.2s' }}\r\n                >\r\n                    <i className='far fa-heart'></i>\r\n                </div>\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong className='text-dark'>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n\r\n                <Card.Text as=\"h3\"  style={{ marginBottom: '0' , paddingBottom:'0'}}>\r\n                    ${product.price}\r\n                </Card.Text>\r\n                <Card.Text  as='small'  style={{ marginTop: '0' }}>\r\n                    available: {product.countInStock}\r\n                </Card.Text>\r\n                <ProductButtons \r\n                itemInCart={itemInCart} \r\n                product={product}\r\n                 />\r\n\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","// CategoryIconCard.js\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nfunction CategoryCard({ iconSrc, title }) {\r\n    return (\r\n        <Card className=\"mb-5 text-center border-0\">\r\n            <div className=\"rounded-circle bg-light p-4 mx-auto mt-3\">\r\n                <Card.Img src={iconSrc} alt=\"Icon\" \r\n                style={{ width: '50px', height: '50px', transition: 'transform 0.2s, opacity 0.2s' }}\r\n                className=\"zoom-out-image\"\r\n                />\r\n            </div>\r\n            <Card.Body className=\"p-0 mt-4\">\r\n                <Card.Title tag=\"h6\" className=\"mb-0 font-weight-normal\">{title}</Card.Title>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CategoryCard;\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport CategoryCard from '../components/CategoryCard';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nfunction HomeScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { error, loading, products, page, pages } = productList;\r\n\r\n  let keyword = history.location.search;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword));\r\n  }, [dispatch, keyword]);\r\n\r\n  const categories = [\r\n    {\r\n      id: 1,\r\n      iconSrc:\r\n        'https://cdnprod.mafretailproxy.com/assets/images/Best_Deals_EN_2x_e8c999f7bd.png',\r\n      title: 'Best Deals',\r\n    },\r\n    {\r\n      id: 2,\r\n      iconSrc:\r\n        'https://cdnprod.mafretailproxy.com/assets/images/3_Fruits_and_Vegetable_3d4bb7ebf0.png',\r\n      title: 'Fruits & Vegetables',\r\n    },\r\n    {\r\n      id: 3,\r\n      iconSrc:\r\n        'https://cdnprod.mafretailproxy.com/assets/images/4_Meat_and_Poultry_75f53eba5c.png',\r\n      title: 'Meat & Poultry',\r\n    },\r\n    {\r\n      id: 4,\r\n      iconSrc:\r\n        'https://cdnprod.mafretailproxy.com/assets/images/5_Dairy_and_Eggs_94e4027d93.png',\r\n      title: 'Dairy & Eggs',\r\n    },\r\n    {\r\n      id: 5,\r\n      iconSrc:\r\n        'https://cdnprod.mafretailproxy.com/assets/images/7_Cooking_Ingredients_49a59a92c4.png',\r\n      title: 'Cooking Essentials',\r\n    },\r\n    {\r\n      id: 6,\r\n      iconSrc:\r\n        'https://cdnprod.mafretailproxy.com/assets/images/6_Rice_Pulses_and_Pasta_5aae2c4170.png',\r\n      title: 'Rice & Pasta',\r\n    },\r\n    // {\r\n    //     id: 7,\r\n    //     iconSrc:\r\n    //       'https://cdnprod.mafretailproxy.com/assets/images/9_Frozen_Food_68d047637c.png',\r\n    //     title: 'Frozen Food',\r\n    //   },\r\n    //   {\r\n    //     id: 8,\r\n    //     iconSrc:\r\n    //       'https://cdnprod.mafretailproxy.com/assets/images/16_Home_and_Garden_e078cf8ff5.png',\r\n    //     title: 'Home & Garden',\r\n    //   },\r\n    //   {\r\n    //     id: 9,\r\n    //     iconSrc:\r\n    //       'https://cdnprod.mafretailproxy.com/assets/images/15_Smartphones_and_Electronics_7b54200566.png',\r\n    //     title: 'Mobiles & Electronics',\r\n    //   },\r\n    //   {\r\n    //     id: 10,\r\n    //     iconSrc:\r\n    //       'https://cdnprod.mafretailproxy.com/assets/images/14_Appliances_5dedf63667.png',\r\n    //     title: 'Appliances',\r\n    //   },\r\n    //   {\r\n    //     id:11,\r\n    //     iconSrc:\r\n    //       'https://cdnprod.mafretailproxy.com/assets/images/13_Baby_Care_48174bb941.png',\r\n    //     title: 'Baby Products',\r\n    //   },\r\n    //   {\r\n    //     id: 12,\r\n    //     iconSrc:\r\n    //       'https://cdnprod.mafretailproxy.com/assets/images/11_Cleaning_and_Household_13916df221.png',\r\n    //     title: 'Cleaning & Laundry',\r\n    //   },\r\n    // Add more categories as needed\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      {!keyword && <ProductCarousel />}\r\n\r\n      <h1 className='text-capitalize'>Categories: </h1>\r\n\r\n      <Row>\r\n        {categories.map((category) => (\r\n          <Col xs={6} sm={4} md={3} xl={2}>\r\n            <CategoryCard\r\n              iconSrc={category.iconSrc}\r\n              title={category.title}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n      <div style={{width:'100%', height:'1px', backgroundColor:'grey', marginTop:'10px',marginBottom:'10px'}}></div>\r\n\r\n      <h1 className='text-capitalize'>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col\r\n                key={product._id}\r\n                sm={12}\r\n                md={6}\r\n                lg={4}\r\n                xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n\r\n          <Paginate\r\n            page={page}\r\n            pages={pages}\r\n            keyword={keyword}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form, ButtonGroup,InputGroup } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport ProductButtons from '../components/ProductButtons'\r\n// import { addToCart, minusCart,removeFromCart } from '../actions/cartActions'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n  \r\n    const itemInCart = cartItems.find(item => item.product === Number(match.params.id));\r\n    // console.log(\"item in cart\", itemInCart.qty)\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    // const addToCartHandler = () => {\r\n    //     // history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    //     dispatch(addToCart(match.params.id, Number(qty)));\r\n    // }\r\n\r\n    // const minusCartHandler = () => {\r\n    //     // delete one item at once\r\n    //     dispatch(minusCart(match.params.id))\r\n    // }\r\n\r\n    // const removeItemHandler =() => {\r\n    //     dispatch(removeFromCart(Number(match.params.id)))\r\n        \r\n    // }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? <p className='text-success'>In Stock</p> : <p className='text-warning'>Out of Stock</p>}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                            \r\n                                            <ProductButtons\r\n                                                itemInCart={itemInCart}\r\n                                                product={product}\r\n                                                // qty={qty}\r\n                                                // addToCartHandler={addToCartHandler}\r\n                                                // minusCartHandler={minusCartHandler}\r\n                                                // removeItemHandler={removeItemHandler}\r\n                                            />\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart, listCartItems } from '../actions/cartActions'\r\nimport ProductButtons from '../components/ProductButtons'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    // const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    useEffect(() => {\r\n        \r\n        if (productId) {\r\n            dispatch(addToCart(productId, 1))\r\n        }\r\n    }, [dispatch, productId])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    // const handleDispach =() => {\r\n    //     dispatch(listCartItems())\r\n    // }\r\n\r\n    return (\r\n        <Row>\r\n            {/* <Button onClick={handleDispach} className='btn'>dispatch</Button> */}\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            ${item.price}\r\n                                        </Col>\r\n\r\n                                        {/* <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col> */}\r\n                                        <Col md={2}>\r\n                                            <ProductButtons \r\n                                            product={{ ...item, _id: item.product }}\r\n                                            itemInCart={item}\r\n                                            plusClass=\" bg-light text-dark btn-sm border-0\"\r\n                                            minusClass=\"bg-light text-dark btn-sm border-0\"\r\n                                            trashIcon=\"minus\"\r\n\r\n                                            />\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                            className='btn-sm'\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block btn-success '\r\n                            disabled={cartItems.length === 0 }\r\n                            onClick={checkoutHandler}\r\n                            // style={{backgroundColor:\"#29ab99\"}}\r\n                        >\r\n                            {userInfo? \r\n                            \"Proceed To Checkout\": \"Login to proceed\"\r\n                            }\r\n                        </Button>\r\n                        \r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Paid</th>\r\n                                        <th>Delivered</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>${order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <div\r\n    className='mt-5'\r\n        style={{\r\n          background: 'black',\r\n          height: '3px',\r\n        }}\r\n      />\r\n                <Button className='mt-5' type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col ,ToggleButton, ToggleButtonGroup, Overlay, Tooltip, OverlayTrigger} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const handlePaymentMethodChange = (method) => {\r\n        setPaymentMethod(method);\r\n      };\r\n\r\n\r\n    //   get total to validate wallet\r\n    \r\n    \r\n    \r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        console.log(paymentMethod)\r\n        history.push('/placeorder')\r\n    }\r\n    const walletBal = 5\r\n\r\n\r\n\r\n    return (\r\n        \r\n        \r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            \r\n            <h4 className='mb-2'>total price: {cart.totalPrice}<small className='text-warning'>( including tax)</small></h4>\r\n            <Form onSubmit={submitHandler}>\r\n            <Form.Group as={Col} controlId='paymentMethod' >\r\n      <Form.Label as='legend'>Select Method</Form.Label>\r\n      <Col>\r\n        <ToggleButtonGroup\r\n        orientation=\"vertical\"\r\n          type='radio'\r\n          name='paymentMethod'\r\n          value={paymentMethod}\r\n          onChange={handlePaymentMethodChange}\r\n        //   vertical \r\n\r\n          className='border rounded p-3 w-300 ' \r\n          \r\n        >\r\n         <ToggleButton\r\n            \r\n            value='PayPal'\r\n            className={paymentMethod === 'PayPal' ? 'btn btn-info mr-2' : 'mr-2 btn border border-info btn-light'}\r\n          >\r\n            PayPal or Credit Card\r\n          </ToggleButton>\r\n          <ToggleButton\r\n          \r\n            value='wallet'\r\n            className={paymentMethod === 'wallet' ? 'btn btn-info ml-2' : 'ml-2 btn border border-info btn-light'}\r\n          >\r\n            Wallet\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n          {paymentMethod=== \"wallet\" && <p className={walletBal < cart.totalPrice ? \"text-danger\" : \"text-success\"}>{walletBal<cart.totalPrice ? `insufficient balance of $${walletBal}`  : `your balance is: $${walletBal}` }</p>}\r\n      </Col>\r\n    </Form.Group>\r\n        \r\n    <div\r\n    className='mt-5'\r\n        style={{\r\n          background: 'lightgrey ',\r\n          height: '2px',\r\n        }}\r\n      />\r\n      <div className='mt-4'>\r\n\r\n          {paymentMethod===\"wallet\"&&walletBal<cart.totalPrice ? \r\n          <OverlayTrigger  placement=\"auto\"  overlay={<p className=\"ml-1 text-danger \"  id=\"tooltip-disabled\">Wallet Can not be used!! </p>}>\r\n          <span className=\"d-inline-block \">\r\n                <Button  style={{ pointerEvents: 'none' }} disabled={paymentMethod===\"wallet\"&&walletBal<cart.totalPrice} type='submit'  variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </span>\r\n        </OverlayTrigger>\r\n        :\r\n                <Button   disabled={paymentMethod===\"wallet\"&&walletBal<cart.totalPrice} type='submit'  variant='primary'>\r\n                    Continue\r\n                </Button>\r\n}\r\n      </div>\r\n            </Form>\r\n        </FormContainer>\r\n\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    // cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    // cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    // cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    // cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Order: {order.Id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import React from 'react'\r\nimport { Image, Figure } from 'react-bootstrap'\r\n\r\nfunction WalletScreen() {\r\n  return (\r\n    <>\r\n    <h2>My Wallet</h2>\r\n    <Image thumbnail className=\" position-relative\" src='https://static.vecteezy.com/system/resources/previews/005/006/009/non_2x/withdraw-money-top-up-e-wallet-concept-illustration-flat-design-eps10-modern-graphic-element-for-landing-page-empty-state-ui-infographic-icon-vector.jpg' alt=\"wallet\"></Image>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default WalletScreen","import { Container } from 'react-bootstrap'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\nimport WalletScreen from './screens/WalletScreen'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <Route path='/wallet/:id?' component={WalletScreen} />\r\n\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n\r\n          <Route path='/admin/productlist' component={ProductListScreen} />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}